{"ast":null,"code":"var _jsxFileName = \"/Users/jasondsouza/Desktop/todo-app/src/App.js\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n  useEffect(() => {\n    // fires when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    // adds new todo to beginning of todos array\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      padding: 16\n    },\n    variant: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"React Todo\"), /*#__PURE__*/React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    removeTodo: removeTodo,\n    toggleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jasondsouza/Desktop/todo-app/src/App.js"],"names":["Typography","React","useEffect","useState","TodoForm","TodoList","LOCAL_STORAGE_KEY","App","todos","setTodos","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","todo","toggleComplete","id","map","completed","removeTodo","filter","padding"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMQ,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,iBAArB,CAAX,CAArB;;AACA,QAAII,YAAJ,EAAkB;AAChBD,MAAAA,QAAQ,CAACC,YAAD,CAAR;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,YAAY,CAACE,OAAb,CAAqBT,iBAArB,EAAwCK,IAAI,CAACK,SAAL,CAAeR,KAAf,CAAxC;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;AAKA,WAASS,OAAT,CAAiBC,IAAjB,EAAuB;AACrB;AACAT,IAAAA,QAAQ,CAAC,CAACS,IAAD,EAAO,GAAGV,KAAV,CAAD,CAAR;AACD;;AAED,WAASW,cAAT,CAAwBC,EAAxB,EAA4B;AAC1BX,IAAAA,QAAQ,CACND,KAAK,CAACa,GAAN,CAAUH,IAAI,IAAI;AAChB,UAAIA,IAAI,CAACE,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EACL,GAAGF,IADE;AAELI,UAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI;AAFZ,SAAP;AAID;;AACD,aAAOJ,IAAP;AACD,KARD,CADM,CAAR;AAWD;;AAED,WAASK,UAAT,CAAoBH,EAApB,EAAwB;AACtBX,IAAAA,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAnB;AAAoC,IAAA,OAAO,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAER,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAET,KADT;AAEE,IAAA,UAAU,EAAEe,UAFd;AAGE,IAAA,cAAc,EAAEJ,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAaD;;AAED,eAAeZ,GAAf","sourcesContent":["import Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    // fires when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    // adds new todo to beginning of todos array\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n      <Typography style={{ padding: 16 }} variant=\"h1\">\n        React Todo\n      </Typography>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n      />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}