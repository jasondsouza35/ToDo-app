{"ast":null,"code":"import _objectSpread from\"/Users/jasondsouza/Documents/GitHub/ToDo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/jasondsouza/Documents/GitHub/ToDo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jasondsouza/Documents/GitHub/ToDo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Typography from\"@material-ui/core/Typography\";import React,{useEffect,useState}from\"react\";import\"./App.css\";import TodoForm from\"./components/TodoForm\";import TodoList from\"./components/TodoList\";var LOCAL_STORAGE_KEY=\"react-todo-list-todos\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];useEffect(function(){// proceeds when app component mounts to the DOM\nvar storageTodos=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));if(storageTodos){setTodos(storageTodos);}},[]);useEffect(function(){// proceeds when todos array gets updated\nlocalStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(todos));},[todos]);function addTodo(todo){// adds new todo to beginning of todos array\nsetTodos([todo].concat(_toConsumableArray(todos)));}function toggleComplete(id){setTodos(todos.map(function(todo){if(todo.id===id){return _objectSpread(_objectSpread({},todo),{},{completed:!todo.completed});}return todo;}));}function removeTodo(id){setTodos(todos.filter(function(todo){return todo.id!==id;}));}return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Typography,{style:{padding:16},variant:\"h1\"},\"My Todo List\"),/*#__PURE__*/React.createElement(TodoForm,{addTodo:addTodo}),/*#__PURE__*/React.createElement(TodoList,{todos:todos,removeTodo:removeTodo,toggleComplete:toggleComplete}));}export default App;","map":{"version":3,"sources":["/Users/jasondsouza/Documents/GitHub/ToDo-app/src/App.js"],"names":["Typography","React","useEffect","useState","TodoForm","TodoList","LOCAL_STORAGE_KEY","App","todos","setTodos","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","todo","toggleComplete","id","map","completed","removeTodo","filter","padding"],"mappings":"gfAAA,MAAOA,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,uBAA1B,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eAEAP,SAAS,CAAC,UAAM,CACd;AACA,GAAMQ,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,iBAArB,CAAX,CAArB,CACA,GAAII,YAAJ,CAAkB,CAChBD,QAAQ,CAACC,YAAD,CAAR,CACD,CACF,CANQ,CAMN,EANM,CAAT,CAQAR,SAAS,CAAC,UAAM,CACd;AACAW,YAAY,CAACE,OAAb,CAAqBT,iBAArB,CAAwCK,IAAI,CAACK,SAAL,CAAeR,KAAf,CAAxC,EACD,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAKA,QAASS,CAAAA,OAAT,CAAiBC,IAAjB,CAAuB,CACrB;AACAT,QAAQ,EAAES,IAAF,4BAAWV,KAAX,GAAR,CACD,CAED,QAASW,CAAAA,cAAT,CAAwBC,EAAxB,CAA4B,CAC1BX,QAAQ,CACND,KAAK,CAACa,GAAN,CAAU,SAAAH,IAAI,CAAI,CAChB,GAAIA,IAAI,CAACE,EAAL,GAAYA,EAAhB,CAAoB,CAClB,sCACKF,IADL,MAEEI,SAAS,CAAE,CAACJ,IAAI,CAACI,SAFnB,GAID,CACD,MAAOJ,CAAAA,IAAP,CACD,CARD,CADM,CAAR,CAWD,CAED,QAASK,CAAAA,UAAT,CAAoBH,EAApB,CAAwB,CACtBX,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAa,SAAAN,IAAI,QAAIA,CAAAA,IAAI,CAACE,EAAL,GAAYA,EAAhB,EAAjB,CAAD,CAAR,CACD,CAED,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,UAAD,EAAY,KAAK,CAAE,CAAEK,OAAO,CAAE,EAAX,CAAnB,CAAoC,OAAO,CAAC,IAA5C,iBADF,cAIE,oBAAC,QAAD,EAAU,OAAO,CAAER,OAAnB,EAJF,cAKE,oBAAC,QAAD,EACE,KAAK,CAAET,KADT,CAEE,UAAU,CAAEe,UAFd,CAGE,cAAc,CAAEJ,cAHlB,EALF,CADF,CAaD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // proceeds when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    // proceeds when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    // adds new todo to beginning of todos array\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n      <Typography style={{ padding: 16 }} variant=\"h1\">\n        My Todo List\n      </Typography>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n      />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}